name: Cut latest release
on: workflow_dispatch
jobs:
  createReleasePR:
    name: Create PR for release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BRANCH: "release/latest"

    steps:
      # Setup release branch
      - uses: peterjgrainger/action-create-branch@v3
        with:
          branch: refs/heads/${{ env.RELEASE_BRANCH }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.RELEASE_BRANCH }}

      # Push commit from release-it: version bump, changelog, build
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: npm ci

      - name: Get next version
        id: version
        run: |
          next_version=$(npx release-it --release-version | tail -1)
          echo "next=$next_version" >> $GITHUB_OUTPUT
          echo "### Release Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** $next_version" >> $GITHUB_STEP_SUMMARY
          echo "**Channel:** ${{ env.RELEASE_BRANCH }}" >> $GITHUB_STEP_SUMMARY

      - name: Get changelog
        id: changelog
        run: |
          changelog=$(npx auto-changelog --stdout --unreleased-only --config dev/.auto-changelog)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "changelog<<$EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "$changelog" >> $GITHUB_STEP_SUMMARY

      - run: npm run version-release:latest
      - run: |
          npx auto-changelog -p --config dev/.auto-changelog
          git add CHANGELOG.md
          git commit -m "üìù Update CHANGELOG"
          git push origin ${{ env.RELEASE_BRANCH }} --progress --porcelain
        continue-on-error: true

      # Create the release PR
      - run: |
          gh pr create --base "main" --head "${{ env.RELEASE_BRANCH }}" --label "release" --title "chore(release): v${{ steps.version.outputs.next }}" --body "ü§ñ **Preparing to release as [beta]**\n\n${{ steps.changelog.outputs.changelog }}"
